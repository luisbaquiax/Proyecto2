package com.proyecto2.UI.CreandoTablero;

import com.proyecto2.Casillas.CasillaCarcel;
import com.proyecto2.Casillas.CasillaInicio;
import com.proyecto2.Casillas.CasillaNeutro;
import com.proyecto2.Casillas.CasillaPropiedad;
import com.proyecto2.Casillas.CasillaTrampa;
import com.proyecto2.Entidad.Boton;
import com.proyecto2.Entidad.Jugador;
import com.proyecto2.Jugar.Juego;
import com.proyecto2.Manejadores.GuardarTablero;
import com.proyecto2.UI.JuegoPrincipal;
import java.awt.Color;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;

/**
 *
 * @author Luis
 */
public class CrearTablero extends javax.swing.JFrame implements ActionListener, MouseListener {

    private GuardarTablero guardarTablero;
    private CasillaUI[][] casillasUi;
    private int filas;
    private int columnas;
    private int dimension;
    //colores
    public static final Color COLOR_INICIO = new java.awt.Color(255, 255, 0);
    public static final Color COLOR_NEUTRO = new java.awt.Color(255, 255, 255);
    public static final Color COLOR_PROPIEDAD = new java.awt.Color(255, 0, 51);
    public static final Color COLOR_TRAMPA = new java.awt.Color(255, 204, 0);
    public static final Color COLOR_TOMA = new java.awt.Color(0, 51, 153);
    public static final Color COLOR_CARCEL = new java.awt.Color(51, 51, 51);
    //casillas
    private CasillaInicio inicio;
    private CasillaNeutro neutro;
    private CasillaTrampa trampa;
    private CasillaPropiedad propiedad;
    private CasillaCarcel carcel;
    //JUEGO
    private Juego juego;
    //atributos del juego
    private int limCasa, limHoteles, dineroInicial, dineroPorVuelta, interes, noDados;
    private String nombreJuego;
    //jugadores
    private Jugador[] jugando;

    /**
     * Creates new form CrearTablero
     */
    public CrearTablero() {
        initComponents();

        filas = (int) spinerFilas.getValue();
        columnas = (int) spinerColumnas.getValue();
        dimension = 75;

        guardarTablero = new GuardarTablero();
        setTitle("Creando Tablero de MONOPOLY");
        btnCrearTablero.addActionListener(this);
        btnGuardarTablero.addActionListener(guardarTablero);
        txtNombreTablero.setText("");
        //atributos del juego
        limCasa = (int) spinerLimiteCasa.getValue();
        limHoteles = (int) spinerLimiteHotel.getValue();
        dineroInicial = (int) spinerDineroInicialJugadores.getValue();
        dineroPorVuelta = (int) spinerDineroPorVuelta.getValue();
        interes = (int) spinerHipotecaInterés.getValue();
        nombreJuego = txtNombreTablero.getText();
        noDados = (int) spinerNoDados.getValue();

        //Permite que la ventana se coloque al centro de la pantalla
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMENUCrearTablero = new javax.swing.JPanel();
        labelFilas = new javax.swing.JLabel();
        spinerFilas = new javax.swing.JSpinner();
        labelColumnas = new javax.swing.JLabel();
        spinerColumnas = new javax.swing.JSpinner();
        btnCrearTablero = new javax.swing.JButton();
        btnGuardarTablero = new javax.swing.JButton();
        txtNombreTablero = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        spinerNojugadores = new javax.swing.JSpinner();
        btnAcptarNombreTablero = new javax.swing.JButton();
        btnIngresarJugadores = new javax.swing.JButton();
        lblNoDados = new javax.swing.JLabel();
        spinerNoDados = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spinerLimiteCasa = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        spinerLimiteHotel = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        spinerHipotecaInterés = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        spinerDineroInicialJugadores = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        spinerDineroPorVuelta = new javax.swing.JSpinner();
        scroollTablero = new javax.swing.JScrollPane();
        panelTablero = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelFilas.setText("Ingrese filas: ");

        spinerFilas.setModel(new javax.swing.SpinnerNumberModel(10, 2, null, 1));
        spinerFilas.setAutoscrolls(true);
        spinerFilas.setMinimumSize(new java.awt.Dimension(100, 35));

        labelColumnas.setText("Ingrese columnas: ");

        spinerColumnas.setModel(new javax.swing.SpinnerNumberModel(10, 2, null, 1));
        spinerColumnas.setMinimumSize(new java.awt.Dimension(100, 35));

        btnCrearTablero.setText("Crear tablero");
        btnCrearTablero.setFocusable(false);
        btnCrearTablero.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCrearTablero.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        btnGuardarTablero.setText("Guardar Tablero");
        btnGuardarTablero.setFocusable(false);
        btnGuardarTablero.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardarTablero.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardarTablero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarTableroActionPerformed(evt);
            }
        });

        txtNombreTablero.setText("textField1");

        jLabel1.setText("Nombre del tablero/juego: ");

        jLabel2.setText("Cantidad de jugadores: 2-6 ");

        spinerNojugadores.setModel(new javax.swing.SpinnerNumberModel(2, 2, 6, 1));

        btnAcptarNombreTablero.setText("Jugar Ahora");
        btnAcptarNombreTablero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcptarNombreTableroActionPerformed(evt);
            }
        });

        btnIngresarJugadores.setText("Ingresar jugadores");
        btnIngresarJugadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarJugadoresActionPerformed(evt);
            }
        });

        lblNoDados.setText("No. DADOS");

        spinerNoDados.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));

        jLabel3.setText("Limite de casas: 1-3 ");

        spinerLimiteCasa.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));

        jLabel4.setText("Límite de Hoteles:  1-3");

        spinerLimiteHotel.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));

        jLabel5.setText("Porcentaje de interés por Hipoteca: 0-100 ");

        spinerHipotecaInterés.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        jLabel6.setText("Dinero inicial jugadores: ");

        spinerDineroInicialJugadores.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel7.setText("Dinero por vuelta: ");

        spinerDineroPorVuelta.setModel(new javax.swing.SpinnerNumberModel(200, 1, null, 1));

        javax.swing.GroupLayout panelMENUCrearTableroLayout = new javax.swing.GroupLayout(panelMENUCrearTablero);
        panelMENUCrearTablero.setLayout(panelMENUCrearTableroLayout);
        panelMENUCrearTableroLayout.setHorizontalGroup(
            panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMENUCrearTableroLayout.createSequentialGroup()
                .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMENUCrearTableroLayout.createSequentialGroup()
                        .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelColumnas)
                            .addComponent(labelFilas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spinerColumnas, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(spinerFilas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCrearTablero)
                            .addComponent(btnGuardarTablero))
                        .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMENUCrearTableroLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombreTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinerDineroInicialJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addComponent(btnAcptarNombreTablero))
                            .addGroup(panelMENUCrearTableroLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinerNojugadores, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnIngresarJugadores)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinerDineroPorVuelta, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelMENUCrearTableroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblNoDados, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinerNoDados, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinerLimiteCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinerLimiteHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinerHipotecaInterés, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );
        panelMENUCrearTableroLayout.setVerticalGroup(
            panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMENUCrearTableroLayout.createSequentialGroup()
                .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelMENUCrearTableroLayout.createSequentialGroup()
                        .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMENUCrearTableroLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombreTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMENUCrearTableroLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(spinerDineroInicialJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAcptarNombreTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardarTablero)
                            .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(spinerNojugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnIngresarJugadores)
                                .addComponent(jLabel7)
                                .addComponent(spinerDineroPorVuelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelMENUCrearTableroLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCrearTablero)
                            .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(spinerFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelFilas)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinerColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelColumnas))
                        .addGap(6, 6, 6)))
                .addGroup(panelMENUCrearTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNoDados)
                    .addComponent(spinerNoDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(spinerLimiteCasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(spinerLimiteHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(spinerHipotecaInterés, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        scroollTablero.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        scroollTablero.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        scroollTablero.setPreferredSize(new java.awt.Dimension(77677, 77000));

        panelTablero.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panelTablero.setPreferredSize(new java.awt.Dimension(2000, 2000));

        javax.swing.GroupLayout panelTableroLayout = new javax.swing.GroupLayout(panelTablero);
        panelTablero.setLayout(panelTableroLayout);
        panelTableroLayout.setHorizontalGroup(
            panelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1998, Short.MAX_VALUE)
        );
        panelTableroLayout.setVerticalGroup(
            panelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1998, Short.MAX_VALUE)
        );

        scroollTablero.setViewportView(panelTablero);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMENUCrearTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(scroollTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelMENUCrearTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scroollTablero, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarJugadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarJugadoresActionPerformed
        int cantidadJugadores = (int) spinerNojugadores.getValue();
        AgregarJugadores jugadoress = new AgregarJugadores(cantidadJugadores);
        jugadoress.setVisible(true);
    }//GEN-LAST:event_btnIngresarJugadoresActionPerformed

    private void btnGuardarTableroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarTableroActionPerformed

        juego = new Juego(noDados, panelTablero, limCasa, limHoteles, interes, dineroPorVuelta, dineroInicial, nombreJuego);
    }//GEN-LAST:event_btnGuardarTableroActionPerformed

    private void btnAcptarNombreTableroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcptarNombreTableroActionPerformed
        JuegoPrincipal empezar = new JuegoPrincipal();
        empezar.setVisible(true);
    }//GEN-LAST:event_btnAcptarNombreTableroActionPerformed

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource().equals(btnCrearTablero)) {
            agregarCasillas();
        }
    }

    public void agregarCasillas() {
        //Se obtiene lac cantidad que contienen los espiner asignando a filas y columnas respectivamente
        //Eliminamos los anteriores botones
        panelTablero.removeAll();
        panelTablero.setSize(dimension * columnas, dimension * filas);
        panelTablero.setPreferredSize(panelTablero.getSize());

        //Se crea una matriz de casillasUi segun las filas y columnas entrantes
        casillasUi = new CasillaUI[filas][columnas];

        //Se recorren las filas
        for (int fila = 0; fila < filas; fila++) {
            //Estando en la fila se recorrer las columnas
            for (int columna = 0; columna < columnas; columna++) {

                casillasUi[fila][columna] = new CasillaUI(dimension * columna, dimension * fila, dimension, dimension);
                casillasUi[fila][columna].addMouseListener(this);
                //se agrega cada casillaUI al panelTablero
                panelTablero.add(casillasUi[fila][columna]);
            }
        }
        //Se actualiza el panel para que se vean las casillasUi
        panelTablero.updateUI();
        scroollTablero.validate();
        scroollTablero.repaint();
    }

    @Override
    public void mouseClicked(MouseEvent e) {

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                if (e.getSource().equals(casillasUi[i][j])) {

                    try {
                        int tipo = Integer.parseInt(JOptionPane.showInputDialog(null, "1. INICIO\n"
                                + "2.Neutro\n"
                                + "3.Trampa\n"
                                + "4.Propiedad\n"
                                + "5.Toma una tarjeta\n"
                                + "6.Cárcel", "Elige el tipo de casilla que quieres colocar", JOptionPane.INFORMATION_MESSAGE));
                        switch (tipo) {
                            case 1://inicio
                                inicio = new CasillaInicio();
                                casillasUi[i][j].getLabelNombreCasilla().setBackground(COLOR_INICIO);
                                casillasUi[i][j].getLabelCostoEstancia().setBackground(COLOR_INICIO);
                                casillasUi[i][j].getLabelNombreCasilla().setText(inicio.getNombre());
                                casillasUi[i][j].setBackground(COLOR_INICIO);
                                break;
                            case 2://neutro
                                neutro = new CasillaNeutro();
                                casillasUi[i][j].getLabelNombreCasilla().setBackground(COLOR_NEUTRO);
                                casillasUi[i][j].getLabelCostoEstancia().setBackground(COLOR_NEUTRO);
                                casillasUi[i][j].getLabelNombreCasilla().setText("");
                                casillasUi[i][j].getLabelCostoEstancia().setText("");
                                casillasUi[i][j].setBackground(COLOR_NEUTRO);
                                break;
                            case 3://trampa

                                casillasUi[i][j].getLabelNombreCasilla().setBackground(COLOR_TRAMPA);
                                casillasUi[i][j].getLabelCostoEstancia().setBackground(COLOR_NEUTRO);

                                casillasUi[i][j].getLabelNombreCasilla().setText("TRAMPA!!");
                                casillasUi[i][j].getLabelCostoEstancia().setText("");
                                casillasUi[i][j].setBackground(COLOR_NEUTRO);
                                break;
                            case 4://propiedad

                                try {
                                    String nombre = JOptionPane.showInputDialog(null, "Escribe el nombre de la propidad>: ", "Propiedad",
                                            JOptionPane.INFORMATION_MESSAGE);

                                    int precio = Integer.parseInt(JOptionPane.showInputDialog(null, "Escribe el precio de la propiedad ", "Propiedad",
                                            JOptionPane.INFORMATION_MESSAGE));

                                    propiedad = new CasillaPropiedad(nombre, precio);
                                    casillasUi[i][j].getLabelNombreCasilla().setBackground(COLOR_PROPIEDAD);
                                    casillasUi[i][j].getLabelCostoEstancia().setBackground(COLOR_NEUTRO);
                                    casillasUi[i][j].getLabelNombreCasilla().setText(propiedad.getNombrePropiedad());
                                    casillasUi[i][j].getLabelCostoEstancia().setText("Q " + propiedad.getPrecioDeCompra());
                                    casillasUi[i][j].setBackground(COLOR_NEUTRO);
                                } catch (Exception ex) {
                                    JOptionPane.showInputDialog(null, "Escribe un entero", "Error", JOptionPane.ERROR);
                                    ex.getMessage();
                                }

                                break;
                            case 5://toma tarjeta

                                casillasUi[i][j].getLabelNombreCasilla().setBackground(COLOR_TOMA);
                                casillasUi[i][j].getLabelCostoEstancia().setBackground(COLOR_NEUTRO);
                                casillasUi[i][j].getLabelNombreCasilla().setText("SUERTE!!!");
                                casillasUi[i][j].getLabelNombreCasilla().setForeground(COLOR_NEUTRO);
                                casillasUi[i][j].getLabelCostoEstancia().setText("");
                                casillasUi[i][j].setBackground(COLOR_NEUTRO);
                                break;
                            case 6://carcel

                                casillasUi[i][j].getLabelNombreCasilla().setBackground(COLOR_CARCEL);
                                casillasUi[i][j].getLabelCostoEstancia().setBackground(COLOR_CARCEL);
                                casillasUi[i][j].getLabelNombreCasilla().setText("CARCEL");
                                casillasUi[i][j].getLabelNombreCasilla().setForeground(COLOR_NEUTRO);
                                casillasUi[i][j].setBackground(COLOR_CARCEL);
                                break;
                            default:
                                JOptionPane.showMessageDialog(null, "Por favor elige una opcón correcta");
                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Por favor ingrese un número");
                        ex.getMessage();
                    }
                }
            }
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                if (e.getSource().equals(casillasUi[i][j])) {
                    casillasUi[i][j].getLabelNombreCasilla().setBackground(Color.LIGHT_GRAY);
                    casillasUi[i][j].getLabelCostoEstancia().setBackground(Color.LIGHT_GRAY);
                    casillasUi[i][j].getLabelNombreCasilla().setText("");
                    casillasUi[i][j].getLabelCostoEstancia().setText("");
                    casillasUi[i][j].setBackground(Color.LIGHT_GRAY);
                }

            }
        }
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    public void modificarCasilla() {

    }
    
    public void agregarBotones() {

        panelTablero.removeAll();
        panelTablero.setSize(dimension * columnas, dimension * filas);
        panelTablero.setPreferredSize(panelTablero.getSize());

        Boton[][] botones;
        //Se crea una matriz de botones segun las filas y columnas entrantes
        botones = new Boton[filas][columnas];

        //Se recorren las filas
        for (int fila = 0; fila < filas; fila++) {
            //Estando en la fila se recorrer las columnas
            for (int columna = 0; columna < columnas; columna++) {

                botones[fila][columna] = new Boton(dimension * columna, dimension * fila, dimension, dimension);

                panelTablero.add(botones[fila][columna]);
            }
        }
        //Se actualiza el panel para que se vean los botones
        panelTablero.updateUI();
        scroollTablero.validate();
        scroollTablero.repaint();
    }

    //
    public JButton getBtnAcptarNombreTablero() {
        return btnAcptarNombreTablero;
    }

    public JButton getBtnCrearTablero() {
        return btnCrearTablero;
    }

    public JButton getBtnGuardarTablero() {
        return btnGuardarTablero;
    }

    public JButton getBtnIngresarJugadores() {
        return btnIngresarJugadores;
    }

    public JSpinner getSpinerColumnas() {
        return spinerColumnas;
    }

    public JSpinner getSpinerDineroInicialJugadores() {
        return spinerDineroInicialJugadores;
    }

    public JSpinner getSpinerDineroPorVuelta() {
        return spinerDineroPorVuelta;
    }

    public JSpinner getSpinerFilas() {
        return spinerFilas;
    }

    public JSpinner getSpinerHipotecaInterés() {
        return spinerHipotecaInterés;
    }

    public JSpinner getSpinerLimiteCasa() {
        return spinerLimiteCasa;
    }

    public JSpinner getSpinerLimiteHotel() {
        return spinerLimiteHotel;
    }

    public JSpinner getSpinerNoDados() {
        return spinerNoDados;
    }

    public JSpinner getSpinerNojugadores() {
        return spinerNojugadores;
    }

    public TextField getTxtNombreTablero() {
        return txtNombreTablero;
    }

    public JPanel getPanelTablero() {
        return panelTablero;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcptarNombreTablero;
    private javax.swing.JButton btnCrearTablero;
    private javax.swing.JButton btnGuardarTablero;
    private javax.swing.JButton btnIngresarJugadores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel labelColumnas;
    private javax.swing.JLabel labelFilas;
    private javax.swing.JLabel lblNoDados;
    private javax.swing.JPanel panelMENUCrearTablero;
    private javax.swing.JPanel panelTablero;
    private javax.swing.JScrollPane scroollTablero;
    private javax.swing.JSpinner spinerColumnas;
    private javax.swing.JSpinner spinerDineroInicialJugadores;
    private javax.swing.JSpinner spinerDineroPorVuelta;
    private javax.swing.JSpinner spinerFilas;
    private javax.swing.JSpinner spinerHipotecaInterés;
    private javax.swing.JSpinner spinerLimiteCasa;
    private javax.swing.JSpinner spinerLimiteHotel;
    private javax.swing.JSpinner spinerNoDados;
    private javax.swing.JSpinner spinerNojugadores;
    private java.awt.TextField txtNombreTablero;
    // End of variables declaration//GEN-END:variables

}
